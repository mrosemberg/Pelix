{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Proyectos\\\\Web\\\\Series-\\\\Series-\\\\src\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport './style/movie.css';\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\nimport Layout from \"../components/Layout\";\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"basic-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, props.movies.map(function (movie) {\n    return __jsx(\"div\", {\n      key: movie.id,\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/m/[id].js\",\n      as: \"/m/\".concat(movie.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: movie.image.medium,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    })));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://api.tvmaze.com/shows'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Fetched. Total: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            movies: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Proyectos/Web/Series-/Series-/src/pages/index.js"],"names":["Link","fetch","Layout","Index","props","movies","map","movie","id","image","medium","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;;;AAAA,OAAO,mBAAP;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAIG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACnB;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,MAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,eAAQD,KAAK,CAACC,EAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,KAAN,CAAYC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADmB;AAAA,GAAtB,CADH,CAJH,CADgB;AAAA,CAAnB;;AAkBAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFV,KAAK,CAAC,6BAAD,CADH;;AAAA;AAChBW,UAAAA,GADgB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,2BAA+BF,IAAI,CAACG,MAApC;AAJsB,2CAMf;AACHZ,YAAAA,MAAM,EAAGS;AADN,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeX,KAAf","sourcesContent":["import './style/movie.css'\r\n\r\nimport Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst Index = props => (\r\n   <div>\r\n      <Layout>\r\n      \r\n      </Layout>      \r\n      <div className=\"basic-grid\">\r\n        {props.movies.map(movie => (\r\n            <div key={movie.id} className=\"card\">\r\n                <Link href=\"/m/[id].js\" as={`/m/${movie.id}`}>\r\n                    {/* <a>{movie.name}</a> */}\r\n                    <img src={movie.image.medium}/>\r\n                </Link>\r\n            </div>\r\n        ))} \r\n      </div>\r\n   </div>\r\n);\r\n\r\nIndex.getInitialProps = async function () {\r\n  const res   = await fetch('http://api.tvmaze.com/shows');\r\n  const data  = await res.json();\r\n\r\n  console.log(`Fetched. Total: ${data.length}`);\r\n  \r\n  return {\r\n      movies : data\r\n  };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}