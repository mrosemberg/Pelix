{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Proyectos\\\\Web\\\\PelixSource\\\\Pelix\\\\src\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch'; // import Header from \"../components/Header\";\n// import Movies from '../components/Movies';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Pelix\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    key: props.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/m/[id].js\",\n    as: \"/m/\".concat(props.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, props.showImage.map(function (image) {\n    return __jsx(\"img\", {\n      src: image.medium,\n      alt: props.nameShow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    });\n  }))))));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://api.tvmaze.com/shows'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Fetched. Total: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            idShow: data.map(function (entry) {\n              return entry.id;\n            }),\n            showImage: data.map(function (entry) {\n              return entry.image;\n            }),\n            nameShow: data.map(function (entry) {\n              return entry.name;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Proyectos/Web/PelixSource/Pelix/src/pages/index.js"],"names":["Link","fetch","Index","props","id","showImage","map","image","medium","nameShow","getInitialProps","res","json","data","console","log","length","idShow","entry","name"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,EAAE,eAAQD,KAAK,CAACC,EAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,KAAK;AAAA,WACzB;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,MAAhB;AAAwB,MAAA,GAAG,EAAEL,KAAK,CAACM,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAAzB,CAAJ,CADJ,CADJ,CADF,CAHH,CADgB;AAAA,CAAnB;;AAgBAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFT,KAAK,CAAC,6BAAD,CADH;;AAAA;AAChBU,UAAAA,GADgB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,2BAA+BF,IAAI,CAACG,MAApC;AAJsB,2CAMf;AACHC,YAAAA,MAAM,EAAEJ,IAAI,CAACP,GAAL,CAAS,UAAAY,KAAK;AAAA,qBAAIA,KAAK,CAACd,EAAV;AAAA,aAAd,CADL;AAEHC,YAAAA,SAAS,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAY,KAAK;AAAA,qBAAIA,KAAK,CAACX,KAAV;AAAA,aAAd,CAFR;AAGHE,YAAAA,QAAQ,EAAEI,IAAI,CAACP,GAAL,CAAS,UAAAY,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AAHP,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAejB,KAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n// import Header from \"../components/Header\";\r\n// import Movies from '../components/Movies';\r\n\r\nconst Index = props => (\r\n   <div>\r\n      <h1>Pelix</h1>\r\n\r\n      <ul>        \r\n        <li key={props.id}>\r\n            <Link href=\"/m/[id].js\" as={`/m/${props.id}`}>\r\n                <a>{props.showImage.map(image => (\r\n                    <img src={image.medium} alt={props.nameShow}/>\r\n                ))}</a>\r\n            </Link>\r\n        </li>\r\n      </ul>\r\n   </div>\r\n);\r\n\r\nIndex.getInitialProps = async function () {\r\n  const res   = await fetch('http://api.tvmaze.com/shows');\r\n  const data  = await res.json();\r\n\r\n  console.log(`Fetched. Total: ${data.length}`);\r\n\r\n  return {\r\n      idShow: data.map(entry => entry.id),\r\n      showImage: data.map(entry => entry.image),\r\n      nameShow: data.map(entry => entry.name)\r\n  };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}