{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Proyectos\\\\Web\\\\PelixSource\\\\Pelix\\\\src\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch'; // import Header from \"../components/Header\";\n// import Movies from '../components/Movies';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Pelix\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, props.movies));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://api.tvmaze.com/shows'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Fetched. Total: \".concat(data.length));\n          return _context.abrupt(\"return\", movies);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Proyectos/Web/PelixSource/Pelix/src/pages/index.js"],"names":["Link","fetch","Index","props","movies","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MADX,CAFH,CADgB;AAAA,CAAnB;;AAkBAF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFJ,KAAK,CAAC,6BAAD,CADH;;AAAA;AAChBK,UAAAA,GADgB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,2BAA+BF,IAAI,CAACG,MAApC;AAJsB,2CAOnBP,MAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeF,KAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n// import Header from \"../components/Header\";\r\n// import Movies from '../components/Movies';\r\n\r\nconst Index = props => (\r\n   <div>\r\n      <h1>Pelix</h1>\r\n      <p>\r\n          {props.movies}\r\n      </p>\r\n      {/* <ul>\r\n        {props.movies.map(movie => (\r\n            <li key={movie.movieId}>\r\n                <Link href=\"/m/[id].js\" as={`/m/${movie.movieId}`}>\r\n                    <img src={movie.movieImage} alt={movie.movieName}/>\r\n                </Link>\r\n            </li>\r\n        ))} \r\n      </ul> */}\r\n   </div>\r\n);\r\n\r\nIndex.getInitialProps = async function () {\r\n  const res   = await fetch('http://api.tvmaze.com/shows');\r\n  const data  = await res.json();\r\n\r\n  console.log(`Fetched. Total: ${data.length}`);\r\n  \r\n return (\r\n     movies\r\n );\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}