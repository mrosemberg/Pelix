{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Proyectos\\\\Web\\\\PelixSource\\\\Pelix\\\\src\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch'; // import Header from \"../components/Header\";\n// import Movies from '../components/Movies';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Pelix\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.movies.map(function (movie) {\n    return __jsx(\"li\", {\n      key: movie.movieId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/m/[id]\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data, movies;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://api.tvmaze.com/shows'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Fetched. Total: \".concat(data.length));\n          movies = data.map(function (movie) {\n            return function () {\n              return {\n                movieId: movie.id,\n                movieImage: movie.image.map(function (img) {\n                  return img.medium;\n                }),\n                movieName: movie.name\n              };\n            };\n          });\n          return _context.abrupt(\"return\", movies);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Proyectos/Web/PelixSource/Pelix/src/pages/index.js"],"names":["Link","fetch","Index","props","movies","map","movie","movieId","getInitialProps","res","json","data","console","log","length","id","movieImage","image","img","medium","movieName","name"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADmB;AAAA,GAAtB,CADH,CAHH,CADgB;AAAA,CAAnB;;AAeAL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFP,KAAK,CAAC,6BAAD,CADH;;AAAA;AAChBQ,UAAAA,GADgB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,2BAA+BF,IAAI,CAACG,MAApC;AAEMV,UAAAA,MANgB,GAMPO,IAAI,CAACN,GAAL,CAAS,UAAAC,KAAK;AAAA,mBAAI,YAAM;AACnC,qBAAO;AACLC,gBAAAA,OAAO,EAASD,KAAK,CAACS,EADjB;AAELC,gBAAAA,UAAU,EAAMV,KAAK,CAACW,KAAN,CAAYZ,GAAZ,CAAgB,UAAAa,GAAG;AAAA,yBAAIA,GAAG,CAACC,MAAR;AAAA,iBAAnB,CAFX;AAGLC,gBAAAA,SAAS,EAAOd,KAAK,CAACe;AAHjB,eAAP;AAKH,aAN4B;AAAA,WAAd,CANO;AAAA,2CAcfjB,MAde;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeF,KAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from 'isomorphic-unfetch';\r\n// import Header from \"../components/Header\";\r\n// import Movies from '../components/Movies';\r\n\r\nconst Index = props => (\r\n   <div>\r\n      <h1>Pelix</h1>\r\n\r\n      <ul>\r\n        {props.movies.map(movie => (\r\n            <li key={movie.movieId}>\r\n                <Link href=\"/m/[id]\">\r\n                </Link>\r\n            </li>\r\n        ))} \r\n      </ul>\r\n   </div>\r\n);\r\n\r\nIndex.getInitialProps = async function () {\r\n  const res   = await fetch('http://api.tvmaze.com/shows');\r\n  const data  = await res.json();\r\n\r\n  console.log(`Fetched. Total: ${data.length}`);\r\n  \r\n  const movies = data.map(movie => () => {\r\n      return {\r\n        movieId       : movie.id,\r\n        movieImage    : movie.image.map(img => img.medium),\r\n        movieName     : movie.name\r\n      };\r\n  });\r\n\r\n  return movies;\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}