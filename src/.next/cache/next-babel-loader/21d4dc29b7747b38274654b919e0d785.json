{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Proyectos\\\\Web\\\\PelixSource\\\\Pelix\\\\src\\\\pages\\\\m\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar Movie = function Movie(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  });\n};\n\nMovie.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Movie;","map":{"version":3,"sources":["C:/Proyectos/Web/PelixSource/Pelix/src/pages/m/[id].js"],"names":["fetch","Movie","props","getInitialProps","context","id","query","res","json","show","console","log","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB;AAAA,CAAnB;;AAQAD,KAAK,CAACE,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACPD,OAAO,CAACE,KADD,CACdD,EADc;AAAA;AAAA,2CAEJL,KAAK,wCAAiCK,EAAjC,EAFD;;AAAA;AAEhBE,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAKtBC,UAAAA,OAAO,CAACC,GAAR,yBAA6BF,IAAI,CAACG,IAAlC;AALsB,2CAOf;AAAEH,YAAAA,IAAI,EAAJA;AAAF,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeR,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\n\r\nconst Movie = props => (\r\n  <div>\r\n      \r\n  </div>\r\n   \r\n \r\n);\r\n\r\nMovie.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n  const show = await res.json();\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}